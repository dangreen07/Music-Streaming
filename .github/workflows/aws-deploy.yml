name: Deploy docker image to AWS

on:
    push:
        branches:
            - main

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend

jobs:
    build-and-push-backend-image:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Log in to the Container registry
          uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
        -
                # Add support for more platforms with QEMU (optional)
                # https://github.com/docker/setup-qemu-action
          name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@15c905b16b06416d2086efa066dd8e3a35cc7f98
          with:
            driver-opts: 'image=moby/buildkit:v0.10.5'
            platforms: linux/amd64,linux/arm64/v8,linux/arm64
        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: ./backend
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v2
          with:
            subject-name: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true
    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push-backend-image
        steps:
        - name: executing remote ssh commands
          uses: appleboy/ssh-action@v1.2.0
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            port: ${{ secrets.PORT }}
            # This command may take a while to compile the rust code
            command_timeout: 45m
            script: 
                |
                sudo docker compose stop
                cd /home/ubuntu/Music-Streaming
                git pull
                sudo docker compose rm -f
                sudo docker compose pull
                sudo docker compose up --build -d
